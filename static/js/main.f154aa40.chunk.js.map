{"version":3,"sources":["Components/Square.js","Components/Board.js","Components/Game.js","index.js"],"names":["Square","props","className","onClick","style","isWinSquare","color","value","Board","board","renderSquare","i","key","squares","winLine","includes","size","boardRow","j","push","calculateWinner","lines","length","a","b","c","winner","winResult","Game","useState","Array","fill","lastTurn","history","setHistory","xIsNext","setXIsNext","stepNumber","setStepNumber","sortIsAscending","setSortIsAscending","current","moves","map","step","move","desc","Math","floor","round","jumpTo","fontWeight","reverse","status","Object","values","square","allVisited","tmpHistory","slice","concat","handleClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f154aa40.chunk.js","sourcesContent":["import \"../index.css\";\r\nimport React from \"react\";\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button\r\n      className=\"square\"\r\n      onClick={props.onClick}\r\n      style={props.isWinSquare ? { color: \"red\" } : { color: \"black\" }}\r\n    >\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Square;\r\n","import \"../index.css\";\r\nimport React from \"react\";\r\nimport Square from \"./Square\";\r\n\r\nfunction Board(props) {\r\n  let board = [];\r\n  function renderSquare(i) {\r\n    return (\r\n      <Square\r\n        key={i}\r\n        value={props.squares[i]}\r\n        onClick={() => props.onClick(i)}\r\n        isWinSquare={\r\n          props.winLine ? (props.winLine.includes(i) ? true : false) : false\r\n        }\r\n      />\r\n    );\r\n  }\r\n  for (let i = 0; i < props.size; i++) {\r\n    let boardRow = [];\r\n    for (let j = 0; j < props.size; j++) {\r\n      boardRow.push(renderSquare(i * props.size + j));\r\n    }\r\n    board.push(\r\n      <div key={i} className=\"board-row\">\r\n        {boardRow}\r\n      </div>\r\n    );\r\n  }\r\n  return <div>{board}</div>;\r\n}\r\nexport default Board;\r\n","import \"../index.css\";\r\nimport Board from \"./Board\";\r\nimport React, { useState } from \"react\";\r\nconst BOARD_SIZE = 3;\r\n\r\nfunction Game(props) {\r\n  const [history, setHistory] = useState([\r\n    {\r\n      squares: Array(9).fill(null),\r\n      lastTurn: -1,\r\n    },\r\n  ]);\r\n  const [xIsNext, setXIsNext] = useState(true);\r\n  const [stepNumber, setStepNumber] = useState(0);\r\n  const [sortIsAscending, setSortIsAscending] = useState(true);\r\n  const current = history[stepNumber];\r\n\r\n  function handleClick(i) {\r\n    const tmpHistory = history.slice(0, stepNumber + 1);\r\n    const current = tmpHistory[tmpHistory.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = xIsNext ? \"X\" : \"O\";\r\n    setHistory(\r\n      tmpHistory.concat([\r\n        {\r\n          squares: squares,\r\n          lastTurn: i,\r\n        },\r\n      ])\r\n    );\r\n    setStepNumber(tmpHistory.length);\r\n    setXIsNext(!xIsNext);\r\n  }\r\n\r\n  function jumpTo(step) {\r\n    setStepNumber(step);\r\n    setXIsNext(step % 2 === 0);\r\n  }\r\n\r\n  function toggleSort(sortOrder) {\r\n    setSortIsAscending(!sortOrder);\r\n  }\r\n  let moves = history.map((step, move) => {\r\n    const desc = move\r\n      ? \"Go to move #\" +\r\n        move +\r\n        \" \" +\r\n        \"(\" +\r\n        Math.floor(history[move].lastTurn / 3 + 1) +\r\n        \",\" +\r\n        Math.round((history[move].lastTurn % 3) + 1) +\r\n        \")\"\r\n      : \"Go to gamestart\";\r\n    return (\r\n      <li key={move}>\r\n        <button\r\n          onClick={() => jumpTo(move)}\r\n          style={\r\n            move === stepNumber\r\n              ? { fontWeight: \"bold\" }\r\n              : { fontWeight: \"normal\" }\r\n          }\r\n        >\r\n          {desc}\r\n        </button>\r\n      </li>\r\n    );\r\n  });\r\n  if (!sortIsAscending) {\r\n    moves = moves.reverse();\r\n  }\r\n  const winner = calculateWinner(current.squares);\r\n  let winLine;\r\n  let status;\r\n  if (winner) {\r\n    status = \"Winner: \" + winner.winner;\r\n    winLine = Object.values(winner.winResult);\r\n  } else {\r\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\r\n  }\r\n  if (winner === null && allVisited(current.squares)) {\r\n    status = \"Draw\";\r\n  }\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"game-board\">\r\n        <Board\r\n          size={BOARD_SIZE}\r\n          squares={current.squares}\r\n          onClick={(i) => handleClick(i)}\r\n          winLine={winLine}\r\n        />\r\n      </div>\r\n      <div className=\"game-info\">\r\n        <div className=\"status\">{status}</div>\r\n        <button onClick={() => toggleSort(sortIsAscending)}>\r\n          {sortIsAscending ? \"Ascending moves\" : \"Descending moves\"}\r\n        </button>\r\n        <ol>{moves}</ol>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return {\r\n        winner: squares[a],\r\n        winResult: [a, b, c],\r\n      };\r\n    }\r\n  }\r\n  return null;\r\n}\r\nfunction allVisited(square) {\r\n  let result = true;\r\n  for (let i = 0; i < square.length; i++) {\r\n    if (square[i] === null) {\r\n      return false;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\";\nimport Game from \"./Components/Game\";\nReactDOM.render(<Game />, document.getElementById(\"root\"));"],"sourceRoot":""}